<script type="text/javascript">
	var pagetitle=commomLab.getQueryParam('pagetitle');
		pagetitle || (pagetitle='');

		document.title=pagetitle;

	//测验活动ID，必填项
	var quizid=commomLab.getQueryParam('quizid');
		quizid || (quizid='');

	//测验ID，必填项
	var attemptid=commomLab.getQueryParam('attemptid');
		attemptid || (attemptid='');

	//测验状态，必填项。如果是“完成”，就查看解析；如果是“进行中”，就进行测验
	var attemptstate=commomLab.getQueryParam('attemptstate');
		attemptstate || (attemptstate='');

	//需要跳转到特定题目的索引，从0开始
	var qIndex=commomLab.getQueryParam('qIndex');
		qIndex || (qIndex='');

	//获取缓存数据
	var cacheUserCourseInfo=commomLab.cacheUserCourseInfo.get();

	window.app = new Vue({
        el: '#app',
        data: {
        	success:true,
        	isloaded:false,//是否所有数据都已经加载完毕
        	msg:'',
        	pageIndex: 0,
        	curQueIndex: 0,
        	questionLen: 0,
        	attemptid: attemptid,
        	hasNextPage: false,
        	attemptstate: attemptstate,
        	attemptData:false,//测验记录列表
        },
        created: function () {
        	this.getAttemptData();
        },
        methods:{
        	//结束异步，关键加载特殊，显示页面内容
        	showHtml:function(){
        		var vm=this;
        		vm.isloaded=true;
				$.hideIndicator();
        	},
        	//获取测验下的题目列表
        	getAttemptData:function(){
        		$.showIndicator();

        		var vm=this;
        		if(vm.attemptstate=='inprogress'){
	        		commomLab.ajaxProcess({
						url: '/gkApp/news/moodleGetAttemptData',
						data: {
							attemptid: vm.attemptid,
							page: vm.pageIndex,
							token: cacheUserCourseInfo.token
						}
					})
					.done(function(res){
						if(
							commomLab.checkAPIResult(res) &&
							res.data.data.questions &&
							res.data.data.questions.length>0
						){
							

							var resData=res.data.data;

							//删除描述，保留题目
							resData.questions=$.grep(resData.questions,function(item){
							    return item.type!='description'
							});

							resData.questions=vm.convertHTML(resData.questions);

							if(vm.pageIndex==0){
								vm.attemptData=resData;
							}
							else if(vm.pageIndex>0){
								//vm.curQueIndex=vm.curQueIndex+1;
								//vm.attemptData.nextpage=resData.nextpage;
								for(var i in resData.questions){
									vm.attemptData.questions.push(resData.questions[i]);
								}
							}

							vm.questionLen=vm.attemptData.questions.length;

							//加载完所有题目后，根据题目索引跳转到对应题目
							vm.isloaded=!(resData.nextpage>0);
							if(!vm.isloaded && qIndex>=0){
								vm.goQuestion(qIndex);
							}

							if(resData.nextpage>0){
								vm.pageIndex=resData.nextpage;
								vm.getAttemptData();
							}

							if(vm.isloaded){
								vm.showHtml();
							}

						}
						else if(res.data.data.errorcode){
							vm.success=false;
							vm.msg=res.data.data.message;
							vm.showHtml();
						}
					})
					.fail(function(){
						vm.showHtml();
					})
				}
				else if(vm.attemptstate=='finished'){
					commomLab.ajaxProcess({
						url: '/gkApp/news/moodleGetAttemptReview',
						data: {
							attemptid: vm.attemptid,
							token: cacheUserCourseInfo.token
						}
					})
					.done(function(res){
						if(
							commomLab.checkAPIResult(res) &&
							res.data.data.questions &&
							res.data.data.questions.length>0
						){
							var resData=res.data.data;

							//删除描述，保留题目
							resData.questions=$.grep(resData.questions,function(item){
							    return item.type!='description'
							});

							resData.questions=vm.convertHTML(resData.questions);

							vm.attemptData=resData;

							vm.questionLen=resData.questions.length;
						}
						else if(res.data.data.errorcode){
							vm.success=false;
							vm.msg=res.data.data.message;
						}
					})
					.always(function(){
						vm.showHtml();
					})
				}
				else{
					vm.success=false;
					vm.msg='数据查询异常';
					vm.showHtml();
				}
        	},
        	//获取能否参加开始考试（开始考试有前置条件）
        	getAttemptAccessInfo:function(attemptid){
        		return commomLab.ajaxProcess({
					url: '/gkApp/news/moodleGetAttemptAccessInformation',
					data: {
						attemptid: attemptid,
						quizid: quizid,
						token: cacheUserCourseInfo.token
					}
				})
        	},
        	//根据 测验状态 获取 测试记录对象
        	getTargetAttempt:function(collector,state){
        		var r=false;
        		if(collector && collector.length>0){
        			for(var i=0; i<collector.length; i++){
        				if(state==collector[i].state){
        					r=collector[i];
        					break;
        				}
	        		}
        		}
        		return r;
        	},
        	//二次处理接口返回的数据，主要是'html'字段的数据
        	convertHTML:function(arr){
        		var vm=this;
        		for(var i in arr){
        			if(arr[i].html){
	        			arr[i].html=arr[i].html.replace(/<script[^>]*>[\s\S]*<\/script>/ig,"");
	        			var $temp=$('<div/>');

	        			$temp.html(arr[i].html);

	        			$temp.find('.content').removeClass('content').addClass('qcontent');

	        			$temp.find('.info,.accesshide,.icon,.answer [type="hidden"]').remove();

	        			$temp.find('.answer [type="radio"] + label,.answer [type="checkbox"] + label').prepend('<i class="icomoon"></i>');

	        			var qTypeName='';
	        			switch(arr[i].type){
	        				case 'truefalse':
	        					qTypeName='判断题';
	        					break;
	        				case 'multichoice':
	        					qTypeName='单选题';
	        					break;
	        				case 'multichoiceset':
	        					qTypeName='多选题';
	        					break;
	        				default :
	        					qTypeName='选择题';
	        					break;
	        			}

	        			var $qtext=$temp.find('.qtext');
	        			var html=$qtext.html();

	        			if(/(\d+\.)/g.test(html)){
		        			$qtext.html(
		        				$qtext.html().replace(/(\d+\.)/g, arr[i].number+'. ')
		        			);
	        			}
	        			else{
	        				$qtext.prepend(arr[i].number+'. ');
	        			}

	        			$qtext
	        			.prepend('<label class="label label-blue-boder margin-r_5rem">'+qTypeName+'</label>')

	        			arr[i].html=$temp.html();
	        		}
	        		else{
	        			arr[i].html='';
	        		}
				}
        		return arr?arr:[];
        	},
        	//上一题
        	prevQuestion:function(event){
        		if( this.questionLen>0 ){
        			if(this.curQueIndex>0){
        				--this.curQueIndex;
					}
        		}
        	},
        	//下一题
        	nextQuestion:function(event){
        		var vm=this;
        		if(this.curQueIndex<this.questionLen-1){
        			++this.curQueIndex
				}
        	},
        	//题目跳转
        	goQuestion:function(index){
        		var vm=this;
        		if(index<0 || !index){
        			vm.curQueIndex=0;
        		}
        		else if(index>this.questionLen-1){
        			vm.curQueIndex=this.questionLen-1;
        		}
        		else{
        			vm.curQueIndex=index;
        		}
        	},
        	transitionEnter:function(){
        		$('.qorder').eq(this.curQueIndex)
        		.text(this.curQueIndex+1);
        	},
        	//结束答题
        	endingExam:function(postData){
        		var vm=this;
        		//var postData=$('#submit-form').serializeArray();
        		/*
        		if(postData.length==0){
        			commomLab.myToast({msg:'请先做题'});
        			return false;
        		}
        		*/

        		//$.showIndicator();
        		return commomLab.ajaxProcess({
        			type: 'POST',
					url: '/gkApp/news/moodleProcessAttempt',
					data: {
						attemptid: vm.attemptid,
						preflightdata: JSON.stringify(postData),
						token: cacheUserCourseInfo.token
					}
				})
        	},
        	//提交答题
        	submitExam:function(){
        		var vm=this;
        		$.confirm('确定提交答卷?',
			        function () {
			        	//确定
			        	var postData=$('#submit-form').serializeArray();

		        		$.showIndicator();

		        		var def=$.Deferred();

		        		//结束测验
		        		vm.endingExam(postData)
		        		.done(function(res){
		        			if(
								commomLab.checkAPIResult(res)
							){
								//数据提交异常
								if(res.data.data.errorcode){
									commomLab.myToast({
										msg:res.data.data.message
									})
								}
								else{
									def.resolve();
								}
							}
							else{
								commomLab.myToast({
									//msg:res.data.data.message
									msg:'提交失败'
								})
							}
						})
						.fail(function(){
							commomLab.myToast({
								msg:'提交失败'
							})
						})
						.always(function(){
							$.hideIndicator();
						});


						def.done(function(){
							$.showIndicator();
							//提交答卷
			        		commomLab.ajaxProcess({
			        			type: 'POST',
								url: '/gkApp/news/moodleSaveAttempt',
								data: {
									attemptid: vm.attemptid,
									preflightdata: JSON.stringify(postData),
									token: cacheUserCourseInfo.token
								}
							})
							.done(function(res){
			        			if(
									commomLab.checkAPIResult(res)
								){
									//数据提交异常
									if(res.data.data.errorcode){
										commomLab.myToast({
											msg:res.data.data.message
										})
									}
									else{
										if(res.data.data.status){
											commomLab.myToast({
												msg:'提交成功'
											},function(){
												//跳转到答题结果页
												location.href='course-study-of-practice-result.html?pagetitle='+pagetitle+'&quizid='+quizid+'&attemptid='+attemptid
											})
										}
										else{
											commomLab.myToast({
												msg:'提交失败'
											})
										}
									}
									
								}
								else{
									commomLab.myToast({
										msg:'提交失败'
									})
								}
							})
							.fail(function(){
								commomLab.myToast({
									msg:'提交失败'
								})
							})
							.always(function(){
								$.hideIndicator();
							});
						})
			        },
			        function () {
			        	//取消
			        }
			    );
        	}
        }
    });
</script>